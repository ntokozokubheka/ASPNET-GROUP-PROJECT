//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spark_Fiddle.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/PO5_SERVICE")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string U_PointsValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int U_activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> U_dobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string U_emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string U_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string U_passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string U_surnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string U_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U_PointsValue {
            get {
                return this.U_PointsValueField;
            }
            set {
                if ((object.ReferenceEquals(this.U_PointsValueField, value) != true)) {
                    this.U_PointsValueField = value;
                    this.RaisePropertyChanged("U_PointsValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int U_active {
            get {
                return this.U_activeField;
            }
            set {
                if ((this.U_activeField.Equals(value) != true)) {
                    this.U_activeField = value;
                    this.RaisePropertyChanged("U_active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> U_dob {
            get {
                return this.U_dobField;
            }
            set {
                if ((this.U_dobField.Equals(value) != true)) {
                    this.U_dobField = value;
                    this.RaisePropertyChanged("U_dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U_email {
            get {
                return this.U_emailField;
            }
            set {
                if ((object.ReferenceEquals(this.U_emailField, value) != true)) {
                    this.U_emailField = value;
                    this.RaisePropertyChanged("U_email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U_name {
            get {
                return this.U_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.U_nameField, value) != true)) {
                    this.U_nameField = value;
                    this.RaisePropertyChanged("U_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U_password {
            get {
                return this.U_passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.U_passwordField, value) != true)) {
                    this.U_passwordField = value;
                    this.RaisePropertyChanged("U_password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U_surname {
            get {
                return this.U_surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.U_surnameField, value) != true)) {
                    this.U_surnameField = value;
                    this.RaisePropertyChanged("U_surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U_type {
            get {
                return this.U_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.U_typeField, value) != true)) {
                    this.U_typeField = value;
                    this.RaisePropertyChanged("U_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/PO5_SERVICE")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_ImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime P_PublishedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int P_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_description_Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_publisherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_AuthorName {
            get {
                return this.P_AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.P_AuthorNameField, value) != true)) {
                    this.P_AuthorNameField = value;
                    this.RaisePropertyChanged("P_AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Img {
            get {
                return this.P_ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.P_ImgField, value) != true)) {
                    this.P_ImgField = value;
                    this.RaisePropertyChanged("P_Img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Language {
            get {
                return this.P_LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.P_LanguageField, value) != true)) {
                    this.P_LanguageField = value;
                    this.RaisePropertyChanged("P_Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime P_PublishedDate {
            get {
                return this.P_PublishedDateField;
            }
            set {
                if ((this.P_PublishedDateField.Equals(value) != true)) {
                    this.P_PublishedDateField = value;
                    this.RaisePropertyChanged("P_PublishedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int P_Quantity {
            get {
                return this.P_QuantityField;
            }
            set {
                if ((this.P_QuantityField.Equals(value) != true)) {
                    this.P_QuantityField = value;
                    this.RaisePropertyChanged("P_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_category {
            get {
                return this.P_categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.P_categoryField, value) != true)) {
                    this.P_categoryField = value;
                    this.RaisePropertyChanged("P_category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_description_ {
            get {
                return this.P_description_Field;
            }
            set {
                if ((object.ReferenceEquals(this.P_description_Field, value) != true)) {
                    this.P_description_Field = value;
                    this.RaisePropertyChanged("P_description_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_name {
            get {
                return this.P_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.P_nameField, value) != true)) {
                    this.P_nameField = value;
                    this.RaisePropertyChanged("P_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_price {
            get {
                return this.P_priceField;
            }
            set {
                if ((object.ReferenceEquals(this.P_priceField, value) != true)) {
                    this.P_priceField = value;
                    this.RaisePropertyChanged("P_price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_publisher {
            get {
                return this.P_publisherField;
            }
            set {
                if ((object.ReferenceEquals(this.P_publisherField, value) != true)) {
                    this.P_publisherField = value;
                    this.RaisePropertyChanged("P_publisher");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SHOPPING_CART", Namespace="http://schemas.datacontract.org/2004/07/PO5_SERVICE")]
    [System.SerializableAttribute()]
    public partial class SHOPPING_CART : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Order_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order_Quantity {
            get {
                return this.Order_QuantityField;
            }
            set {
                if ((this.Order_QuantityField.Equals(value) != true)) {
                    this.Order_QuantityField = value;
                    this.RaisePropertyChanged("Order_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_ID {
            get {
                return this.Product_IDField;
            }
            set {
                if ((this.Product_IDField.Equals(value) != true)) {
                    this.Product_IDField = value;
                    this.RaisePropertyChanged("Product_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/PO5_SERVICE")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Adressline_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Adressline_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Adressline_3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscountRecievedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Order_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VATField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adressline_1 {
            get {
                return this.Adressline_1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Adressline_1Field, value) != true)) {
                    this.Adressline_1Field = value;
                    this.RaisePropertyChanged("Adressline_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adressline_2 {
            get {
                return this.Adressline_2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Adressline_2Field, value) != true)) {
                    this.Adressline_2Field = value;
                    this.RaisePropertyChanged("Adressline_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adressline_3 {
            get {
                return this.Adressline_3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Adressline_3Field, value) != true)) {
                    this.Adressline_3Field = value;
                    this.RaisePropertyChanged("Adressline_3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountRecieved {
            get {
                return this.DiscountRecievedField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountRecievedField, value) != true)) {
                    this.DiscountRecievedField = value;
                    this.RaisePropertyChanged("DiscountRecieved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order_ID {
            get {
                return this.Order_IDField;
            }
            set {
                if ((this.Order_IDField.Equals(value) != true)) {
                    this.Order_IDField = value;
                    this.RaisePropertyChanged("Order_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointsUsed {
            get {
                return this.PointsUsedField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsUsedField, value) != true)) {
                    this.PointsUsedField = value;
                    this.RaisePropertyChanged("PointsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total {
            get {
                return this.TotalField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalField, value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VAT {
            get {
                return this.VATField;
            }
            set {
                if ((object.ReferenceEquals(this.VATField, value) != true)) {
                    this.VATField = value;
                    this.RaisePropertyChanged("VAT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseInfo", Namespace="http://schemas.datacontract.org/2004/07/PO5_SERVICE")]
    [System.SerializableAttribute()]
    public partial class PurchaseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Invoice_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Order_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Invoice_Id {
            get {
                return this.Invoice_IdField;
            }
            set {
                if ((this.Invoice_IdField.Equals(value) != true)) {
                    this.Invoice_IdField = value;
                    this.RaisePropertyChanged("Invoice_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Order_ID {
            get {
                return this.Order_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Order_IDField, value) != true)) {
                    this.Order_IDField = value;
                    this.RaisePropertyChanged("Order_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCost {
            get {
                return this.ProductCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCostField, value) != true)) {
                    this.ProductCostField = value;
                    this.RaisePropertyChanged("ProductCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsRegUser", ReplyAction="http://tempuri.org/IService1/IsRegUserResponse")]
        bool IsRegUser(string _username, string _name, string _surname, string _dob, string _email, string _password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsRegUser", ReplyAction="http://tempuri.org/IService1/IsRegUserResponse")]
        System.Threading.Tasks.Task<bool> IsRegUserAsync(string _username, string _name, string _surname, string _dob, string _email, string _password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        Spark_Fiddle.ServiceReference1.User Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.User> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        Spark_Fiddle.ServiceReference1.User GetUser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.User> GetUserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        bool EditUser(int Id, string username, string name, string email, string dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        System.Threading.Tasks.Task<bool> EditUserAsync(int Id, string username, string name, string email, string dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduct", ReplyAction="http://tempuri.org/IService1/GetProductResponse")]
        Spark_Fiddle.ServiceReference1.Product GetProduct(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduct", ReplyAction="http://tempuri.org/IService1/GetProductResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Product> GetProductAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProduct", ReplyAction="http://tempuri.org/IService1/EditProductResponse")]
        bool EditProduct(int Id, string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProduct", ReplyAction="http://tempuri.org/IService1/EditProductResponse")]
        System.Threading.Tasks.Task<bool> EditProductAsync(int Id, string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductList", ReplyAction="http://tempuri.org/IService1/GetProductListResponse")]
        Spark_Fiddle.ServiceReference1.Product[] GetProductList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductList", ReplyAction="http://tempuri.org/IService1/GetProductListResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Product[]> GetProductListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCARTList", ReplyAction="http://tempuri.org/IService1/GetCARTListResponse")]
        Spark_Fiddle.ServiceReference1.SHOPPING_CART[] GetCARTList(int U_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCARTList", ReplyAction="http://tempuri.org/IService1/GetCARTListResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.SHOPPING_CART[]> GetCARTListAsync(int U_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCart", ReplyAction="http://tempuri.org/IService1/EditCartResponse")]
        bool EditCart(int _UserID, int _ProductID, int _Quantinty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCart", ReplyAction="http://tempuri.org/IService1/EditCartResponse")]
        System.Threading.Tasks.Task<bool> EditCartAsync(int _UserID, int _ProductID, int _Quantinty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        bool AddToCart(int _UserID, int _ProductID, int _Quantinty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        System.Threading.Tasks.Task<bool> AddToCartAsync(int _UserID, int _ProductID, int _Quantinty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveItemCart", ReplyAction="http://tempuri.org/IService1/RemoveItemCartResponse")]
        bool RemoveItemCart(int _User, int _Product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveItemCart", ReplyAction="http://tempuri.org/IService1/RemoveItemCartResponse")]
        System.Threading.Tasks.Task<bool> RemoveItemCartAsync(int _User, int _Product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Checkout", ReplyAction="http://tempuri.org/IService1/CheckoutResponse")]
        bool Checkout(int _ProductID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Checkout", ReplyAction="http://tempuri.org/IService1/CheckoutResponse")]
        System.Threading.Tasks.Task<bool> CheckoutAsync(int _ProductID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberItemsIncart", ReplyAction="http://tempuri.org/IService1/NumberItemsIncartResponse")]
        int NumberItemsIncart(int _UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberItemsIncart", ReplyAction="http://tempuri.org/IService1/NumberItemsIncartResponse")]
        System.Threading.Tasks.Task<int> NumberItemsIncartAsync(int _UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckCart", ReplyAction="http://tempuri.org/IService1/CheckCartResponse")]
        bool CheckCart(int _UserID, int _ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckCart", ReplyAction="http://tempuri.org/IService1/CheckCartResponse")]
        System.Threading.Tasks.Task<bool> CheckCartAsync(int _UserID, int _ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveBook", ReplyAction="http://tempuri.org/IService1/RemoveBookResponse")]
        bool RemoveBook(int _ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveBook", ReplyAction="http://tempuri.org/IService1/RemoveBookResponse")]
        System.Threading.Tasks.Task<bool> RemoveBookAsync(int _ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        bool AddBook(string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img, string _category, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        System.Threading.Tasks.Task<bool> AddBookAsync(string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img, string _category, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        bool CreateInvoice(int _UserId, int _OrderId, string _PointsUsed, string _TotalCost, string _InvoiceDate, string _DueDate, string _Address, string _Address2, string _Address3, string _ShippingCost, int _status, string _VAT, string discount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        System.Threading.Tasks.Task<bool> CreateInvoiceAsync(int _UserId, int _OrderId, string _PointsUsed, string _TotalCost, string _InvoiceDate, string _DueDate, string _Address, string _Address2, string _Address3, string _ShippingCost, int _status, string _VAT, string discount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPendingOrdersOrInvoice", ReplyAction="http://tempuri.org/IService1/GetPendingOrdersOrInvoiceResponse")]
        Spark_Fiddle.ServiceReference1.Invoice[] GetPendingOrdersOrInvoice(int _UserID, int _Quertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPendingOrdersOrInvoice", ReplyAction="http://tempuri.org/IService1/GetPendingOrdersOrInvoiceResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Invoice[]> GetPendingOrdersOrInvoiceAsync(int _UserID, int _Quertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserList", ReplyAction="http://tempuri.org/IService1/GetUserListResponse")]
        Spark_Fiddle.ServiceReference1.User[] GetUserList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserList", ReplyAction="http://tempuri.org/IService1/GetUserListResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.User[]> GetUserListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrder", ReplyAction="http://tempuri.org/IService1/addOrderResponse")]
        bool addOrder(int _UserID, string _ProductCost, string _OrderID, int _quantity, string _Prname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrder", ReplyAction="http://tempuri.org/IService1/addOrderResponse")]
        System.Threading.Tasks.Task<bool> addOrderAsync(int _UserID, string _ProductCost, string _OrderID, int _quantity, string _Prname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOderLIst", ReplyAction="http://tempuri.org/IService1/GetOderLIstResponse")]
        Spark_Fiddle.ServiceReference1.PurchaseInfo[] GetOderLIst(int _OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOderLIst", ReplyAction="http://tempuri.org/IService1/GetOderLIstResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.PurchaseInfo[]> GetOderLIstAsync(int _OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInv", ReplyAction="http://tempuri.org/IService1/GetInvResponse")]
        Spark_Fiddle.ServiceReference1.Invoice GetInv(int _UserId, int _OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInv", ReplyAction="http://tempuri.org/IService1/GetInvResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Invoice> GetInvAsync(int _UserId, int _OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUserAdmin", ReplyAction="http://tempuri.org/IService1/EditUserAdminResponse")]
        bool EditUserAdmin(int Id, string username, string name, string lastname, string usertype, string email, string dob, string points, int active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUserAdmin", ReplyAction="http://tempuri.org/IService1/EditUserAdminResponse")]
        System.Threading.Tasks.Task<bool> EditUserAdminAsync(int Id, string username, string name, string lastname, string usertype, string email, string dob, string points, int active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditInvoice", ReplyAction="http://tempuri.org/IService1/EditInvoiceResponse")]
        bool EditInvoice(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditInvoice", ReplyAction="http://tempuri.org/IService1/EditInvoiceResponse")]
        System.Threading.Tasks.Task<bool> EditInvoiceAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Reports", ReplyAction="http://tempuri.org/IService1/ReportsResponse")]
        int Reports(int _type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Reports", ReplyAction="http://tempuri.org/IService1/ReportsResponse")]
        System.Threading.Tasks.Task<int> ReportsAsync(int _type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookList", ReplyAction="http://tempuri.org/IService1/GetBookListResponse")]
        Spark_Fiddle.ServiceReference1.Product[] GetBookList(string _m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookList", ReplyAction="http://tempuri.org/IService1/GetBookListResponse")]
        System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Product[]> GetBookListAsync(string _m);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Spark_Fiddle.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Spark_Fiddle.ServiceReference1.IService1>, Spark_Fiddle.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsRegUser(string _username, string _name, string _surname, string _dob, string _email, string _password) {
            return base.Channel.IsRegUser(_username, _name, _surname, _dob, _email, _password);
        }
        
        public System.Threading.Tasks.Task<bool> IsRegUserAsync(string _username, string _name, string _surname, string _dob, string _email, string _password) {
            return base.Channel.IsRegUserAsync(_username, _name, _surname, _dob, _email, _password);
        }
        
        public Spark_Fiddle.ServiceReference1.User Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.User> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public Spark_Fiddle.ServiceReference1.User GetUser(int Id) {
            return base.Channel.GetUser(Id);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.User> GetUserAsync(int Id) {
            return base.Channel.GetUserAsync(Id);
        }
        
        public bool EditUser(int Id, string username, string name, string email, string dob) {
            return base.Channel.EditUser(Id, username, name, email, dob);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAsync(int Id, string username, string name, string email, string dob) {
            return base.Channel.EditUserAsync(Id, username, name, email, dob);
        }
        
        public Spark_Fiddle.ServiceReference1.Product GetProduct(int Id) {
            return base.Channel.GetProduct(Id);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Product> GetProductAsync(int Id) {
            return base.Channel.GetProductAsync(Id);
        }
        
        public bool EditProduct(int Id, string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img) {
            return base.Channel.EditProduct(Id, _name, price, _description, _Quantity, _publishedDate, _authorName, _img);
        }
        
        public System.Threading.Tasks.Task<bool> EditProductAsync(int Id, string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img) {
            return base.Channel.EditProductAsync(Id, _name, price, _description, _Quantity, _publishedDate, _authorName, _img);
        }
        
        public Spark_Fiddle.ServiceReference1.Product[] GetProductList() {
            return base.Channel.GetProductList();
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Product[]> GetProductListAsync() {
            return base.Channel.GetProductListAsync();
        }
        
        public Spark_Fiddle.ServiceReference1.SHOPPING_CART[] GetCARTList(int U_ID) {
            return base.Channel.GetCARTList(U_ID);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.SHOPPING_CART[]> GetCARTListAsync(int U_ID) {
            return base.Channel.GetCARTListAsync(U_ID);
        }
        
        public bool EditCart(int _UserID, int _ProductID, int _Quantinty) {
            return base.Channel.EditCart(_UserID, _ProductID, _Quantinty);
        }
        
        public System.Threading.Tasks.Task<bool> EditCartAsync(int _UserID, int _ProductID, int _Quantinty) {
            return base.Channel.EditCartAsync(_UserID, _ProductID, _Quantinty);
        }
        
        public bool AddToCart(int _UserID, int _ProductID, int _Quantinty) {
            return base.Channel.AddToCart(_UserID, _ProductID, _Quantinty);
        }
        
        public System.Threading.Tasks.Task<bool> AddToCartAsync(int _UserID, int _ProductID, int _Quantinty) {
            return base.Channel.AddToCartAsync(_UserID, _ProductID, _Quantinty);
        }
        
        public bool RemoveItemCart(int _User, int _Product) {
            return base.Channel.RemoveItemCart(_User, _Product);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveItemCartAsync(int _User, int _Product) {
            return base.Channel.RemoveItemCartAsync(_User, _Product);
        }
        
        public bool Checkout(int _ProductID, int Quantity) {
            return base.Channel.Checkout(_ProductID, Quantity);
        }
        
        public System.Threading.Tasks.Task<bool> CheckoutAsync(int _ProductID, int Quantity) {
            return base.Channel.CheckoutAsync(_ProductID, Quantity);
        }
        
        public int NumberItemsIncart(int _UserId) {
            return base.Channel.NumberItemsIncart(_UserId);
        }
        
        public System.Threading.Tasks.Task<int> NumberItemsIncartAsync(int _UserId) {
            return base.Channel.NumberItemsIncartAsync(_UserId);
        }
        
        public bool CheckCart(int _UserID, int _ProductID) {
            return base.Channel.CheckCart(_UserID, _ProductID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCartAsync(int _UserID, int _ProductID) {
            return base.Channel.CheckCartAsync(_UserID, _ProductID);
        }
        
        public bool RemoveBook(int _ProductID) {
            return base.Channel.RemoveBook(_ProductID);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveBookAsync(int _ProductID) {
            return base.Channel.RemoveBookAsync(_ProductID);
        }
        
        public bool AddBook(string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img, string _category, string language) {
            return base.Channel.AddBook(_name, price, _description, _Quantity, _publishedDate, _authorName, _img, _category, language);
        }
        
        public System.Threading.Tasks.Task<bool> AddBookAsync(string _name, string price, string _description, int _Quantity, string _publishedDate, string _authorName, string _img, string _category, string language) {
            return base.Channel.AddBookAsync(_name, price, _description, _Quantity, _publishedDate, _authorName, _img, _category, language);
        }
        
        public bool CreateInvoice(int _UserId, int _OrderId, string _PointsUsed, string _TotalCost, string _InvoiceDate, string _DueDate, string _Address, string _Address2, string _Address3, string _ShippingCost, int _status, string _VAT, string discount) {
            return base.Channel.CreateInvoice(_UserId, _OrderId, _PointsUsed, _TotalCost, _InvoiceDate, _DueDate, _Address, _Address2, _Address3, _ShippingCost, _status, _VAT, discount);
        }
        
        public System.Threading.Tasks.Task<bool> CreateInvoiceAsync(int _UserId, int _OrderId, string _PointsUsed, string _TotalCost, string _InvoiceDate, string _DueDate, string _Address, string _Address2, string _Address3, string _ShippingCost, int _status, string _VAT, string discount) {
            return base.Channel.CreateInvoiceAsync(_UserId, _OrderId, _PointsUsed, _TotalCost, _InvoiceDate, _DueDate, _Address, _Address2, _Address3, _ShippingCost, _status, _VAT, discount);
        }
        
        public Spark_Fiddle.ServiceReference1.Invoice[] GetPendingOrdersOrInvoice(int _UserID, int _Quertype) {
            return base.Channel.GetPendingOrdersOrInvoice(_UserID, _Quertype);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Invoice[]> GetPendingOrdersOrInvoiceAsync(int _UserID, int _Quertype) {
            return base.Channel.GetPendingOrdersOrInvoiceAsync(_UserID, _Quertype);
        }
        
        public Spark_Fiddle.ServiceReference1.User[] GetUserList() {
            return base.Channel.GetUserList();
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.User[]> GetUserListAsync() {
            return base.Channel.GetUserListAsync();
        }
        
        public bool addOrder(int _UserID, string _ProductCost, string _OrderID, int _quantity, string _Prname) {
            return base.Channel.addOrder(_UserID, _ProductCost, _OrderID, _quantity, _Prname);
        }
        
        public System.Threading.Tasks.Task<bool> addOrderAsync(int _UserID, string _ProductCost, string _OrderID, int _quantity, string _Prname) {
            return base.Channel.addOrderAsync(_UserID, _ProductCost, _OrderID, _quantity, _Prname);
        }
        
        public Spark_Fiddle.ServiceReference1.PurchaseInfo[] GetOderLIst(int _OrderID) {
            return base.Channel.GetOderLIst(_OrderID);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.PurchaseInfo[]> GetOderLIstAsync(int _OrderID) {
            return base.Channel.GetOderLIstAsync(_OrderID);
        }
        
        public Spark_Fiddle.ServiceReference1.Invoice GetInv(int _UserId, int _OrderID) {
            return base.Channel.GetInv(_UserId, _OrderID);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Invoice> GetInvAsync(int _UserId, int _OrderID) {
            return base.Channel.GetInvAsync(_UserId, _OrderID);
        }
        
        public bool EditUserAdmin(int Id, string username, string name, string lastname, string usertype, string email, string dob, string points, int active) {
            return base.Channel.EditUserAdmin(Id, username, name, lastname, usertype, email, dob, points, active);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAdminAsync(int Id, string username, string name, string lastname, string usertype, string email, string dob, string points, int active) {
            return base.Channel.EditUserAdminAsync(Id, username, name, lastname, usertype, email, dob, points, active);
        }
        
        public bool EditInvoice(int _id) {
            return base.Channel.EditInvoice(_id);
        }
        
        public System.Threading.Tasks.Task<bool> EditInvoiceAsync(int _id) {
            return base.Channel.EditInvoiceAsync(_id);
        }
        
        public int Reports(int _type) {
            return base.Channel.Reports(_type);
        }
        
        public System.Threading.Tasks.Task<int> ReportsAsync(int _type) {
            return base.Channel.ReportsAsync(_type);
        }
        
        public Spark_Fiddle.ServiceReference1.Product[] GetBookList(string _m) {
            return base.Channel.GetBookList(_m);
        }
        
        public System.Threading.Tasks.Task<Spark_Fiddle.ServiceReference1.Product[]> GetBookListAsync(string _m) {
            return base.Channel.GetBookListAsync(_m);
        }
    }
}
